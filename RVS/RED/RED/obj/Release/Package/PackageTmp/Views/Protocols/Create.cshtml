@model RED.Models.ElectronicDiary.Requests.RequestW
@using RED.Models.ElectronicDiary
@using System.Collections.Generic

@{
    ViewBag.Title = "Create";
}

<link href="~/Content/Our/protocols.css" rel="stylesheet" />
<link href="~/Content/plugins/chosen/chosen.css" rel="stylesheet" />

<h2>Добави</h2>
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Протокол</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @{
            int i = 1;
            var wrappedDiary = new DiaryW(Model.Diary);
        }

        @foreach (var item in Model.Diary.Products.OrderBy(p => p.Number))
        {
            foreach (var test in item.ProductTests)
	        {
                for (int j = 0; j < test.Units; j++)
                {
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Наименование на показателя
                        </label>
                        <label class="col-md-9 modified-label">
                            @test.Test.Name
                        </label>
                    </div>
                    @*<div class="form-group">
                            @Html.Label("unit", "Единица на величината", new { @class = "control-label col-md-2" })
                            <div class="col-md-10">

                            </div>
                        </div>*@
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Методи
                            <i class="fa fa-question-circle" title="Методи-стандартизирани, валидирани, вътрешно-лабораторни"></i>
                        </label>
                        <label class="col-md-9 modified-label-notbold">
                            @test.Test.TestMethods
                        </label>
                    </div>
                    <div class="form-group">
                        <label for="test-method" class="control-label col-md-3">
                            № на образеца
                            <i class="fa fa-question-circle" title="№ на образеца по входящо-изходящия дневник"></i>
                        </label>
                        <label class="col-md-9 modified-label">
                            @{
                                //var number = wrappedDiary.Remark + wrappedDiary.Number + "-" + item.Number + (test.Units > 1 ? "-N" + (j+1) : "");
                                var number = test.Test.AcredetationLevel.Level.Trim() + wrappedDiary.Number + "-" + item.Number + (test.Units > 1 ? "-N" + (j + 1) : ""); 
                            }
                            @number
                            <input type="hidden" name="ProtocolResults[@(i - 1)].ResultNumber" value="@number"></label>
                    </div>
                    <div class="form-group">
                        <label for="ProtocolResults[@(i - 1)].Results" class="control-label col-md-3">
                            Резултати от изследването, неопределеност
                        </label>
                        <div class="col-md-9">
                            @Html.TextArea("ProtocolResults[" + (i - 1) + "].Results", null, new { @class = "form-control tarea", data_val = "true", data_val_required = "Резултатът е задължителен!" })
                            <span class="special-chars-holder">
                                <input type="button" value="±" class="btn btn-xs btn-info" onclick="addPlusMinus(this)" tabindex="-1"/>
                                <input type="button" value="°" class="btn btn-xs btn-info" onclick="addDegrees(this)" tabindex="-1" />
                            </span>
                            @Html.ValidationMessage("ProtocolResults[" + (i - 1) + "].Results", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="ProtocolResults[@(i - 1)].MethodValue" class="control-label col-md-3">
                            Стойност на показателя
                            <i class="fa fa-question-circle" title="Стойност и допуск на показателя по метода"></i>
                        </label>
                        <div class="col-md-9">
                            @Html.TextArea("ProtocolResults[" + (i - 1) + "].MethodValue", null, new { @class = "form-control tarea", data_val = "true", data_val_required = "Стойността е задължителна!" })
                            <span class="special-chars-holder">
                                <input type="button" value="±" class="btn btn-xs btn-info" onclick="addPlusMinus(this)" tabindex="-1" />
                                <input type="button" value="°" class="btn btn-xs btn-info" onclick="addDegrees(this)" tabindex="-1" />
                            </span>
                            @Html.ValidationMessage("ProtocolResults[" + (i - 1) + "].MethodValue", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="test-method" class="control-label col-md-3">
                            Условия на заобикалящата среда
                        </label>
                        <label class="col-md-9 modified-label-notbold">
                            @test.Test.Temperature
                        </label>
                    </div>

                    <input type="hidden" name="ProtocolResults[@(i - 1)].Id" value="@Guid.NewGuid()" />
                    <input type="hidden" name="ProtocolResults[@(i - 1)].ProductTestId" value="@test.Id" />

                    <hr />
                    i++;
                }
	        }
        }

        <div class="form-group">
            <label for="Tester" class="control-label col-md-3">
                Ивършил изпитването:
            </label>
            <div class="col-md-9">
                @Html.TextBox("Tester", null, new { @class = "form-control text-box single-line", data_val = "true", data_val_required = "Извършил изпитването е задължително поле!" })
                @Html.ValidationMessage("Tester", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label for="Tester" class="control-label col-md-3">
                Ръководител:
            </label>
            <div class="col-md-9">
                @Html.TextBox("LabLeader", null, new { @class = "form-control text-box single-line", data_val = "true", data_val_required = "Ръководител е задължително поле!" })
                @Html.ValidationMessage("LabLeader", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.Diary.Products.Any(p => p.ProductTests.Any(pt => pt.Test.AcredetationLevel.Level.Trim() == AcredetationLevels.Acredited)))
        {
            <div class="form-group">
                <label for="RemarkId" class="control-label col-md-3">
                    Забележка (A):
                </label>
                <div class="col-md-9">
                    @Html.DropDownList("RemarkId", null, htmlAttributes: new { @class = "form-control chosen-select a-remarksDd" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-3 col-md-9">
                    <input type="button" value="Добави" class="add-a-remark-btn btn btn-primary" tabindex="5" />
                    <table class="table table-hover remarks-a-list-table" style="margin-top:23px;">
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        }
        @if (Model.Diary.Products.Any(p => p.ProductTests.Any(pt => pt.Test.AcredetationLevel.Level.Trim() == AcredetationLevels.Acredited)))
        {
            <div class="form-group">
                <label for="RemarkId" class="control-label col-md-3">
                    Забележка (B):
                </label>
                <div class="col-md-9">
                    @Html.DropDownList("RemarkId", null, htmlAttributes: new { @class = "form-control chosen-select b-remarksDd" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-3 col-md-9">
                    <input type="button" value="Добави" class="add-b-remark-btn btn btn-primary" tabindex="5" />
                    <table class="table table-hover remarks-b-list-table" style="margin-top:23px;">
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        }

        <div class="form-group" style="margin-bottom: 60px;">
            <div class="col-md-offset-3 col-md-9">
                <input type="submit" value="Запиши" class="btn btn-primary" />
                @Html.ActionLink("Отказ", "Index", "Requests", null, new { @class = "btn btn-default" })
            </div>
        </div>

        <input id="protocolId" type="hidden" name="Id" value="@Guid.NewGuid()" />
        <input type="hidden" name="RequestId" value="@Model.Id" />
        
    </div>
}
<script src="~/Scripts/Our/Helpers.js"></script>
<script src="~/Scripts/plugins/chosen/chosen.jquery.js"></script>
<script src="~/Scripts/Our/Protocols.js"></script>

<script>
    var config = {
        '.chosen-select': {},
        '.chosen-select-deselect': { allow_single_deselect: true },
        '.chosen-select-no-single': { disable_search_threshold: 10 },
        '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
        '.chosen-select-width': { width: "95%" }
    }

    for (var selector in config) {
        $(selector).chosen(config[selector]);
    }
</script>