@model RED.Models.ElectronicDiary.DiaryW
@using System.Globalization;
<link href="~/Content/plugins/chosen/chosen.css" rel="stylesheet" />
<link href="~/Content/plugins/datapicker/datepicker3.css" rel="stylesheet" />
@{
    ViewBag.Title = "Create";
}


<link href="~/Content/plugins/iCheck/custom.css" rel="stylesheet" />
<link href="~/Content/plugins/wizzard/jquery.steps.css" rel="stylesheet" />
<h2>Добави</h2>

@using (Html.BeginForm("Create", "Diary", FormMethod.Post, new { @class = "wizard-big", @id = "form"}))
{
    @Html.AntiForgeryToken()

        <h1>Писмо</h1>
        <fieldset>
            <h2>Информация за писмото</h2>
            <div class="row">
                <div class="col-lg-8">
                    <div class="form-group">
                        @Html.LabelFor(model => model.LetterNumber)
                        @Html.EditorFor(model => model.LetterNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LetterNumber, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group" id="data_1">
                        @Html.LabelFor(model => model.LetterDate)
                        <div class="input-group date">
                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                            <input class="form-control text-box single-line" data-val="true" data-val-required="Датата на писмото е задължителна" id="LetterDate" name="LetterDate" type="datetime" value="@DateTime.Now.ToString("dd.M.yyyy", CultureInfo.InvariantCulture)">
                        </div>
                        @Html.ValidationMessageFor(model => model.LetterDate, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Contractor)
                        @Html.EditorFor(model => model.Contractor, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Contractor, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label for="ClientId">Клиент</label>
                        @Html.DropDownList("ClientId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="text-center">
                        <div style="margin-top: 20px">
                            <i class="fa fa-book" style="font-size: 180px;color: #e5e5e5 "></i>
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>
        <h1>Продукти</h1>
        <fieldset>
            <h2>Информация за продуктите</h2>
            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label" for="Products">Наименование</label>
                        <input type="text" id="Products" onchange="hideNameValidation()" class="form-control text-box single-line" tabindex="1">
                        <span class="text-danger field-validation-error" data-valmsg-replace="true"><span class="product-name-validation collapse">Наименованието е задължително</span></span>
                    </div>
                    <div class="form-group">
                        <label class="control-label" for="Quantity">Количество</label>
                        @*<input placeholder="Брой" class="form-control text-box single-line" data-val="true" data-val-number="Полето трябва да е число" data-val-range="Невалидно число" data-val-range-max="2147483647" data-val-range-min="0" id="Quantity" name="Quantity" type="number" tabindex="2">*@
                        <input class="form-control text-box single-line" onchange="hideQuantityValidation()" id="Quantity" name="Quantity" type="text" tabindex="2">
                        <span class="text-danger field-validation-error" data-valmsg-replace="true"><span class="product-quantity-validation collapse">Количеството е задължително</span></span>
                    </div>
                    <div class="form-group">
                        <input type="button" value="Добави" class="add-product-btn btn btn-primary" tabindex="5" />
                    </div>
                </div>
                <div class="col-lg-6 product-list-table-container">
                    <table class="table table-hover product-list-table" style="margin-top:23px;">
                        <tbody></tbody>
                    </table>
                    <span class="text-danger field-validation-error" data-valmsg-for="product-list-table" data-valmsg-replace="true"><span class="product-list-validation collapse">Въведете поне един продукт!</span></span>
                </div>
            </div>
        </fieldset>
    
        <h1>Finish</h1>
        <fieldset>
            <h2>Terms and Conditions</h2>
            <div class="form-group">
                <label class="control-label" for="Test">Изследване</label>
                <select id="Test" data-placeholder="Choose a Country..." class="form-control chosen-select" tabindex="4">
                    @foreach (var item in ViewBag.Tests)
                    {
                        <option value="@item.Value">@item.Text</option>

                    }
                </select>
                <div class="clearfix"></div>
            </div>
            <input id="acceptTerms" name="acceptTerms" type="checkbox" class="required"> <label for="acceptTerms">I agree with the Terms and Conditions.</label>
        </fieldset>
}

<script src="~/Scripts/plugins/iCheck/icheck.min.js"></script>
<script src="~/Scripts/plugins/staps/jquery.steps.min.js"></script>
<script src="~/Scripts/plugins/chosen/chosen.jquery.js"></script>
<script src="~/Scripts/plugins/datapicker/bootstrap-datepicker.js"></script>
<script>
    var count = 0;

    var config = {
        '.chosen-select': {},
        '.chosen-select-deselect': { allow_single_deselect: true },
        '.chosen-select-no-single': { disable_search_threshold: 10 },
        '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
        '.chosen-select-width': { width: "95%" }
    }
    for (var selector in config) {
        $(selector).chosen(config[selector]);
    }

    $("#wizard").steps();
    $("#form").steps({
        bodyTag: "fieldset",
        onStepChanging: function (event, currentIndex, newIndex) {
            // Always allow going backward even if the current step contains invalid fields!
            if (currentIndex > newIndex) {
                return true;
            }

            if (currentIndex == 1 && count == 0) {
                $('.product-list-validation').removeClass('collapse');
                return false;
            }

            var form = $(this);

            // Clean up if user went backward before
            if (currentIndex < newIndex) {
                // To remove error styles
                $(".body:eq(" + newIndex + ") label.error", form).remove();
                $(".body:eq(" + newIndex + ") .error", form).removeClass("error");
            }

            // Disable validation on fields that are disabled or hidden.
            form.validate().settings.ignore = ":disabled,:hidden";

            // Start validation; Prevent going forward if false
            return form.valid();
        },
        onStepChanged: function (event, currentIndex, priorIndex) {
                    
        },
        onFinishing: function (event, currentIndex) {
            var form = $(this);

            // Disable validation on fields that are disabled.
            // At this point it's recommended to do an overall check (mean ignoring only disabled fields)
            form.validate().settings.ignore = ":disabled";

            // Start validation; Prevent form submission if false
            return form.valid();
        },
        onFinished: function (event, currentIndex) {
            var form = $(this);

            // Submit form input
            form.submit();
        }
    })
    //.validate({
    //    errorPlacement: function (error, element) {
    //        element.before(error);
    //    }
    //});

    $('#data_1 .input-group.date').datepicker({
        format: "dd.m.yyyy",
        todayBtn: "linked",
        keyboardNavigation: false,
        forceParse: false,
        calendarWeeks: true,
        autoclose: true
    });

    $('.add-product-btn').click(function () {

        if ($('#Products').val() == '') {
            $('.product-name-validation').removeClass('collapse');

            if ($('#Quantity').val() == '') {
                $('.product-quantity-validation').removeClass('collapse');
            }

            return false;
        }

        if ($('#Quantity').val() == '') {
            $('.product-quantity-validation').removeClass('collapse');
            return false;
        }


        //var html = $('.product-list').html();

        //html += '<li>';
        //html += '<span>' + $('#Products').val() + '</span>';
        //html += '<input type="hidden" value="' + $('#Products').val() + '" name="Products[' + count + '].Name">';
        //html += '<input type="hidden" value="' + $('#Quantity').val() + '" name="Products[' + count + '].Quantity">';
        //html += '<input type="hidden" value="' + $('#QuantityLabel').val() + '" name="Products[' + count + '].QuantityLabel">';
        //html += '<input type="hidden" value="' + $('.chosen-select').val() + '" name="Products[' + count + '].Test.Id">';
        //html += '</li>';
        //$('.product-list').html(html);

        var content = '<tr><td class="col-md-2"><span class="label label-primary">Добавен</span></td>' +
            '<td class="issue-info">' +
                $('#Products').val() +
                '<input type="hidden" value="' + $('#Products').val() + '" name="Products[' + count + '].Name"></td><td class="col-md-2">' +
                $('#Quantity').val() +
                '<input type="hidden" value="' + $('#Quantity').val() + '" name="Products[' + count + '].Quantity"></td><td class="text-right">' +
                '<a class="delete-product" onclick="deleteProduct(this)"><h3 style="margin: 0px">x</h3></a></td></tr>';

        $('.product-list-table tbody').append(content);


        count++;

        $('#Products').val('');
        $('#Quantity').val('');
        $('.product-list-validation').addClass('collapse');
        $('.current').removeClass('error');
    });

    function deleteProduct(e) {
        //var event = e.target || e.srcElement;
        $(e).parent().parent().remove();
        count--;
    }

    function hideNameValidation() {
        if ($('#Products').val() != '') {
            $('.product-name-validation').addClass('collapse');
        }
    }

    function hideQuantityValidation() {
        if ($('#Quantity').val() != '') {
            $('.product-quantity-validation').addClass('collapse');
        }
    }
</script>

