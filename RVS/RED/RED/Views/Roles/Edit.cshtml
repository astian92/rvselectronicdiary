@model RED.Models.Admin.Roles.RoleW
@using RED.Models.DataContext
@{
    ViewBag.Title = "Edit";
}
<link href="~/Content/plugins/iCheck/custom.css" rel="stylesheet" />
<h2>Промени</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Роля</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-11">
                @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-11 col-md-offset-1">
                @{
                    var features = ViewBag.Features as IEnumerable<Feature>;
                    var visualFeatures = features.Where(x => x.DisplayName.Contains("Визуализация"));
                    var editFeatures = features.Where(x => x.DisplayName.Contains("Обработка"));
                }
                <div class="col-md-6 border-left-right">
                    @foreach (var item in visualFeatures)
                    {
                        <div style="padding:15px;">
                            <input type="checkbox" value="@item.Id" name="features" class="i-checks" @(Model.Connections.Any(x => x.FeatureId == item.Id) ? "checked" : "") />
                            <span class="m-l-xs">@item.DisplayName</span>
                        </div>
                    }
                </div>
                <div class="col-md-6 border-left-right">
                    @foreach (var item in editFeatures)
                    {
                        <div style="padding:15px;">
                            <input type="checkbox" value="@item.Id" name="features" class="i-checks" @(Model.Connections.Any(x => x.FeatureId == item.Id) ? "checked" : "") />
                            <span class="m-l-xs">@item.DisplayName</span>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-1 col-md-11">
                <a href="/Roles/Index" class="btn btn-default">Отказ</a>
                <input type="submit" value="Запази" class="btn btn-primary" />
            </div>
        </div>
    </div>
}
<script src="~/Scripts/plugins/iCheck/icheck.min.js"></script>
<script>
    $('.i-checks').iCheck({
        checkboxClass: 'icheckbox_square-green',
        radioClass: 'iradio_square-green',
    });
</script>